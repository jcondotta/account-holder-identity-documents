name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  LOCALSTACK_VERSION: "3.7.0"

jobs:
  # Phase 1: Basic Build and Unit Tests
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set up JDK 17 and Cache Maven Dependencies
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'   # or 'zulu' if preferred
          java-version: 17
          cache: maven

      - name: Download and Install GraalVM
        run: |
          GRAALVM_VERSION=22.3.0
          GRAALVM_PKG="graalvm-ce-java17-linux-amd64-${GRAALVM_VERSION}.tar.gz"
          curl -L -o ${GRAALVM_PKG} https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/${GRAALVM_PKG}
          tar -xzf ${GRAALVM_PKG} -C /opt/
          export GRAALVM_HOME="/opt/graalvm-ce-java17-${GRAALVM_VERSION}"
          echo "GRAALVM_HOME=${GRAALVM_HOME}" >> $GITHUB_ENV
          echo "${GRAALVM_HOME}/bin" >> $GITHUB_PATH

      - name: Install Native Image Tool
        run: ${GRAALVM_HOME}/bin/gu install native-image

      - name: Build Native Image
        run: |
          mvn clean package -Pnative -Dpackaging=native-image --batch-mode

      - name: Upload Unit Test Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-unit-tests-exec
          path: target/jacoco-unit-tests.exec

#  # Phase 2: Setup Docker Images and Run Integration Tests
#  integration-tests:
#    runs-on: ubuntu-latest
#    needs: build-and-test
#    timeout-minutes: 20
#    steps:
#      - name: Checkout Source Code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK and Cache Maven Dependencies
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'corretto'
#          java-version: 17
#          cache: maven
#
#      - name: Download Unit Test Coverage Report
#        uses: actions/download-artifact@v3
#        with:
#          name: jacoco-unit-tests-exec
#          path: target/
#
#      - name: Cache LocalStack Docker image
#        id: cache-localstack
#        uses: actions/cache@v3
#        with:
#          path: ~/.docker-cache/localstack
#          key: ${{ runner.os }}-localstack-${{ env.LOCALSTACK_VERSION }}
#
#      - name: Load or Pull LocalStack Docker image
#        run: |
#          if [ -f ~/.docker-cache/localstack/localstack.tar ]; then
#            echo "Loading LocalStack Docker image from cache..."
#            docker load -i ~/.docker-cache/localstack/localstack.tar
#          else
#            echo "LocalStack image not found in cache, pulling from Docker Hub..."
#            docker pull localstack/localstack:${{ env.LOCALSTACK_VERSION }}
#            echo "Saving LocalStack image to cache..."
#
#            mkdir -p ~/.docker-cache/localstack
#            docker save localstack/localstack:${{ env.LOCALSTACK_VERSION }} -o ~/.docker-cache/localstack/localstack.tar
#          fi
#
#      - name: Start LocalStack for Integration Tests
#        run: |
#          docker run -d --name localstack \
#            -p 127.0.0.1:4566:4566 \
#            -e SERVICES=s3 \
#            localstack/localstack:3.7.0
#
#      - name: Run Integration Tests with JaCoCo
#        run: |
#          mvn verify -DskipUnitTests=true --batch-mode
#
#      - name: Upload JaCoCo Test Coverage Report
#        uses: actions/upload-artifact@v3
#        with:
#          name: jacoco-test-report
#          path: target/site/jacoco/jacoco.xml
#
#  # Phase 3: SonarCloud Analysis
#  sonarcloud-analysis:
#    runs-on: ubuntu-latest
#    needs: integration-tests
#    steps:
#      - name: Checkout Source Code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK and Cache Maven Dependencies
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'corretto'
#          java-version: 17
#          cache: maven
#
#      - name: Download Test Coverage Report
#        uses: actions/download-artifact@v3
#        with:
#            name: jacoco-test-report
#            path: target/site/jacoco
#
#      - name: Cache SonarCloud packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#
#      - name: Run SonarCloud Analysis
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: |
#            mvn package -DskipUnitTests=true sonar:sonar \
#              -Dsonar.projectKey=jcondotta_account-holder-identity-documents \
#              -Dsonar.organization=jcondotta \
#              -Dsonar.host.url=https://sonarcloud.io \
#              -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
#              -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

